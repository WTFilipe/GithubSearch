package com.example.githubsearch.data.remote.model

import com.example.githubsearch.ui.models.RepositoryOnListUIModel

data class RepositoryOnListRemoteModel(
    val allow_forking: Boolean?,
    val archive_url: String?,
    val archived: Boolean?,
    val assignees_url: String?,
    val blobs_url: String?,
    val branches_url: String?,
    val clone_url: String?,
    val collaborators_url: String?,
    val comments_url: String?,
    val commits_url: String?,
    val compare_url: String?,
    val contents_url: String?,
    val contributors_url: String?,
    val created_at: String?,
    val default_branch: String?,
    val deployments_url: String?,
    val description: String?,
    val disabled: Boolean?,
    val downloads_url: String?,
    val events_url: String?,
    val fork: Boolean?,
    val forks: Int?,
    val forks_count: Int?,
    val forks_url: String?,
    val full_name: String?,
    val git_commits_url: String?,
    val git_refs_url: String?,
    val git_tags_url: String?,
    val git_url: String?,
    val has_discussions: Boolean?,
    val has_downloads: Boolean?,
    val has_issues: Boolean?,
    val has_pages: Boolean?,
    val has_projects: Boolean?,
    val has_wiki: Boolean?,
    val hooks_url: String?,
    val html_url: String?,
    val id: Int?,
    val is_template: Boolean?,
    val issue_comment_url: String?,
    val issue_events_url: String?,
    val issues_url: String?,
    val keys_url: String?,
    val labels_url: String?,
    val language: String?,
    val languages_url: String?,
    val merges_url: String?,
    val milestones_url: String?,
    val name: String?,
    val node_id: String?,
    val notifications_url: String?,
    val open_issues: Int?,
    val open_issues_count: Int?,
    val ownerRemoteModel: OwnerRemoteModel?,
    val `private`: Boolean?,
    val pulls_url: String?,
    val pushed_at: String?,
    val releases_url: String?,
    val size: Int?,
    val ssh_url: String?,
    val stargazers_count: Int?,
    val stargazers_url: String?,
    val statuses_url: String?,
    val subscribers_url: String?,
    val subscription_url: String?,
    val svn_url: String?,
    val tags_url: String?,
    val teams_url: String?,
    val trees_url: String?,
    val updated_at: String?,
    val url: String?,
    val visibility: String?,
    val watchers: Int?,
    val watchers_count: Int?,
    val web_commit_signoff_required: Boolean?
) {
    fun toUIModel(): RepositoryOnListUIModel {
        return RepositoryOnListUIModel(
            allow_forking ?: false,
            archive_url ?: "",
            archived ?: false,
            assignees_url ?: "",
            blobs_url ?: "",
            branches_url ?: "",
            clone_url ?: "",
            collaborators_url ?: "",
            comments_url ?: "",
            commits_url ?: "",
            compare_url ?: "",
            contents_url ?: "",
            contributors_url ?: "",
            created_at ?: "",
            default_branch ?: "",
            deployments_url ?: "",
            description ?: "",
            disabled ?: false,
            downloads_url ?: "",
            events_url ?: "",
            fork ?: false,
            forks ?: -1,
            forks_count ?: -1,
            forks_url ?: "",
            full_name ?: "",
            git_commits_url ?: "",
            git_refs_url ?: "",
            git_tags_url ?: "",
            git_url ?: "",
            has_discussions ?: false,
            has_downloads ?: false,
            has_issues ?: false,
            has_pages ?: false,
            has_projects ?: false,
            has_wiki ?: false,
            hooks_url ?: "",
            html_url ?: "",
            id ?: -1,
            is_template ?: false,
            issue_comment_url ?: "",
            issue_events_url ?: "",
            issues_url ?: "",
            keys_url ?: "",
            labels_url ?: "",
            language ?: "",
            languages_url ?: "",
            merges_url ?: "",
            milestones_url ?: "",
            name ?: "",
            node_id ?: "",
            notifications_url ?: "",
            open_issues ?: -1,
            open_issues_count ?: -1,
            ownerRemoteModel,
            `private` ?: false,
            pulls_url ?: "",
            pushed_at ?: "",
            releases_url ?: "",
            size ?: -1,
            ssh_url ?: "",
            stargazers_count ?: -1,
            stargazers_url ?: "",
            statuses_url ?: "",
            subscribers_url ?: "",
            subscription_url ?: "",
            svn_url ?: "",
            tags_url ?: "",
            teams_url ?: "",
            trees_url ?: "",
            updated_at ?: "",
            url ?: "",
            visibility ?: "",
            watchers ?: -1,
            watchers_count ?: -1,
            web_commit_signoff_required ?: false
        )
    }
}